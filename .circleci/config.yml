version: 2.1

checkout-linux: &checkout-linux
  attach_workspace:
    at: /root

jobs:
  build-linux:
    docker:
      - image: textile/builder:1.12.3
    environment:
      TERM: linux
      TERMINFO: /etc/terminfo
    steps:
      - *checkout-linux
      - checkout
      - restore_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}-{{ arch }}
      - run:
          name: install js deps
          command: |
            yarn install
      - run:
          name: compile
          command: |
            yarn dist -o linux
      - run:
          name: collect artifacts
          command: |
            VERSION=$(echo $CIRCLE_SHA1 | cut -c -7)
            if [ "${CIRCLE_TAG}" != "" ]; then
                VERSION=${CIRCLE_TAG}
            fi
            OUT=~/dist
            mkdir -p ${OUT}
            cd output/linux-amd64
            tar -czvf Textile_${VERSION}_linux-amd64.tar.gz Textile
            mv Textile_${VERSION}_linux-amd64.tar.gz ${OUT}/
      - persist_to_workspace:
          root: ~/
          paths:
            - dist
      - store_artifacts:
          path: ~/dist
  build-mac-win:
    macos:
      xcode: "10.1.0"
    environment:
      GOPATH: /Users/distiller/go
      GOROOT: /usr/local/go
      BREWBIN: /usr/local/opt/go/bin
    steps:
      - checkout
      - run:
          name: install golang
          command: |
            curl -L -o go1.12.3.darwin-amd64.tar.gz https://dl.google.com/go/go1.12.3.darwin-amd64.tar.gz
            sudo tar -C /usr/local -xzf go1.12.3.darwin-amd64.tar.gz
      - restore_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}-{{ arch }}
      - run:
          name: cache mods
          command: |
            export PATH=$PATH:$GOROOT/bin:$GOPATH/bin:$BREWBIN
            go mod download
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}-{{ arch }}
          paths:
            - ~/go/pkg/mod
      - run:
          name: install mingw-w64
          command: |
            brew install mingw-w64
      - run:
          name: install js deps
          command: |
            yarn install
      - run:
          name: compile
          command: |
            export PATH=$PATH:$GOROOT/bin:$GOPATH/bin:$BREWBIN
            yarn build
            go get github.com/asticode/go-astilectron-bundler/...
            go install github.com/asticode/go-astilectron-bundler/astilectron-bundler
            astilectron-bundler -v -c bundler.mac.json
            astilectron-bundler -v -c bundler.windows.json
      - run:
          name: collect artifacts
          command: |
            VERSION=$(echo $CIRCLE_SHA1 | cut -c -7)
            if [ "${CIRCLE_TAG}" != "" ]; then
                VERSION=${CIRCLE_TAG}
            fi
            OUT=~/dist
            mkdir -p ${OUT}
            WD=~/project
            cd ${WD}/output/darwin-amd64
            tar -czvf Textile_${VERSION}_mac-amd64.tar.gz Textile.app
            mv Textile_${VERSION}_mac-amd64.tar.gz ${OUT}/
            cd ${WD}/output/windows-amd64
            zip Textile_${VERSION}_windows-amd64.zip Textile.exe
            mv Textile_${VERSION}_windows-amd64.zip ${OUT}/
      - persist_to_workspace:
          root: ~/
          paths:
            - dist
      - store_artifacts:
          path: ~/dist

  release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - deploy:
          name: release all
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ~/dist/
workflows:
  version: 2
  desktop:
    jobs:
      - build-mac-win:
          filters:
            branches:
              only: master
            tags:
              only: /.*/
      - build-linux:
          filters:
            branches:
              only: master
            tags:
              only: /.*/
      - release:
          requires:
            - build-mac-win
            - build-linux
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/